/*
 * Eslint config file
 * Documentation: https://eslint.org/docs/user-guide/configuring/
 * Install the Eslint extension before using this feature.
 */
module.exports = {
  root: true,
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
  ],
  env: {
    es6: true,
    browser: true,
    node: true,
  },
  parserOptions: {
    ecmaVersion: 13,
    sourceType: 'module',
  },
  'parser': '@typescript-eslint/parser',
  globals: {
    wx: true,
    App: true,
    Page: true,
    getCurrentPages: true,
    getApp: true,
    Component: true,
    requirePlugin: true,
    requireMiniProgram: true,
  },
  plugins: [
    '@typescript-eslint',
  ],
  // extends: 'eslint:recommended',
  ignorePatterns: [
    'script/**/*',
    '.eslintrc.js',
    'typings/types/wx/**/*',
    'miniprogram/miniprogram_npm/**/*',
    '**/*.js',
  ],
  rules: {
    'array-bracket-newline': ['error', { 'multiline': true }],
    'array-bracket-spacing': ['error', 'never'],
    'arrow-spacing': ['error', {
      'before': true,
      'after': true,
    }],
    'brace-style': ['error', '1tbs'],
    'camelcase': 'error',
    'comma-dangle': ['error', {
      'arrays': 'always-multiline',
      'objects': 'always-multiline',
      'imports': 'always-multiline',
      'exports': 'always-multiline',
      'functions': 'always-multiline',
    }],
    'comma-spacing': 'error',
    'comma-style': 'error',
    'computed-property-spacing': 'error',
    'consistent-this': ['error', '_this'],
    'curly': ['error', 'all'],
    'eol-last': ['error', 'always'],
    'func-call-spacing': 'error',
    'indent': ['error', 2],
    'jsx-quotes': 'error',
    'key-spacing': 'error',
    'keyword-spacing': 'error',
    'line-comment-position': 'error',
    'lines-around-comment': 'error',
    'lines-between-class-members': 'error',
    'max-params': ['error', { 'max': 3 }],
    // 'multiline-comment-style': 'error',
    // 'new-cap': 'error',
    'no-alert': 'error',
    'no-console': 'error',
    'no-eval': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-label': 'error',
    'no-extra-parens': ['error', 'all', { 'ignoreJSX': 'multi-line' }],
    'no-labels': 'error',
    'no-lonely-if': 'error',
    'no-multi-spaces': ['error', { 'ignoreEOLComments': true }],
    'no-multi-assign': 'error',
    'no-multiple-empty-lines': 'error',
    // 'no-negated-condition': 'error',
    'no-param-reassign': 'error',
    'no-redeclare': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    // 'no-shadow': 'error',
    'no-shadow-restricted-names': 'error',
    'no-var': 'error',
    'no-trailing-spaces': ['error', { 'ignoreComments': true }],
    'no-use-before-define': 'error',
    'no-useless-return': 'error',
    'no-unneeded-ternary': 'error',
    'quotes': ['error', 'single'],
    'semi': ['error', 'always'],
    'require-await': 'error',
    'object-shorthand': 'error',
    // 'yoda': ['error', 'always'],
    'space-before-function-paren': ['error', {
      'anonymous': 'always',
      'named': 'never',
      'asyncArrow': 'always',
    }],
    'space-infix-ops': 'error',
    'object-curly-spacing': ['error', 'always'],
    'generator-star-spacing': ['error', { 'before': false, 'after': true }],
    'prefer-destructuring': ['error'],
    '@typescript-eslint/no-unused-vars': ['error', {
      'vars': 'all',
      'args': 'after-used',
      'ignoreRestSiblings': false,
    }],
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/member-delimiter-style': 'error',
    '@typescript-eslint/prefer-enum-initializers': 'error',
    '@typescript-eslint/no-explicit-any': ['off'],
    '@typescript-eslint/triple-slash-reference': 'off',
  },
}
